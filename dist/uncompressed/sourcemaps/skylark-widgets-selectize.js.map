{"version":3,"sources":["skylark-widgets-selectize.js"],"names":[],"mappingsfile":"../skylark-widgets-selectize.js","sourcesContent":["define('skylark-widgets-selectize/selectize',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark) {\r\n\tvar selectize = {};\r\n\r\n\treturn skylark.attach(\"widgets.selectize\",selectize);\r\n\r\n});\r\n\r\n\ndefine('skylark-widgets-selectize/CheckBox',[\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"./selectize\"\r\n],function(Widget,selectize){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Check box input element.\r\n\t * \r\n\t * @class CheckBox\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent element.\r\n\t */\r\n\t var CheckBox = Widget.inherit({\r\n\t\t\"_construct\" : function (parent)\r\n\t\t{\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tthis.element.style.display = \"block\";\r\n\t\t\tthis.element.style.boxSizing = \"border-box\";\r\n\t\t\tthis.element.style.cursor = \"pointer\";\r\n\t\t\tthis.element.style.backgroundColor = Editor.theme.boxColor;\r\n\t\t\tthis.element.style.borderRadius = \"4px\";\r\n\t\t\tthis.element.onclick = function()\r\n\t\t\t{\r\n\t\t\t\tself.setValue(!self.value);\r\n\t\t\t\t\r\n\t\t\t\tif(self.onChange !== null)\r\n\t\t\t\t{\r\n\t\t\t\t\tself.onChange(self.value);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tthis.check = document.createElement(\"img\");\r\n\t\t\tthis.check.style.visibility = \"hidden\";\r\n\t\t\tthis.check.style.pointerEvents = \"none\";\r\n\t\t\tthis.check.style.position = \"absolute\";\r\n\t\t\tthis.check.style.top = \"20%\";\r\n\t\t\tthis.check.style.left = \"20%\";\r\n\t\t\tthis.check.style.width = \"60%\";\r\n\t\t\tthis.check.style.height = \"60%\";\r\n\t\t\tthis.check.src = Global.FILE_PATH + \"icons/misc/check.png\";\r\n\t\t\tthis.element.appendChild(this.check);\r\n\r\n\t\t\t/**\r\n\t\t\t * Value stored in the checkbox.\r\n\t\t\t *\r\n\t\t\t * @property value\r\n\t\t\t * @type {Boolean}\r\n\t\t\t */\r\n\t\t\tthis.value = false;\r\n\r\n\t\t\t/**\r\n\t\t\t * On change callback function.\r\n\t\t\t *\r\n\t\t\t * @property onChange\r\n\t\t\t * @type {Function}\r\n\t\t\t */\r\n\t\t\tthis.onChange = null;\r\n\r\n\t\t\t/** \r\n\t\t\t * If the checkbox is disabled the value cannot be edited.\r\n\t\t\t *\r\n\t\t\t * @attribute disabled\r\n\t\t\t * @type {Boolean}\r\n\t\t\t */\r\n\t\t\tthis.disabled = false;\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Set if element is disabled.\r\n\t\t *\r\n\t\t * When disabled the checkbox value cannot be edited.\r\n\t\t *\r\n\t\t * @method setDisabled\r\n\t\t */\r\n\t\tsetDisabled : function(value)\r\n\t\t{\r\n\t\t\tthis.disabled = value;\r\n\t\t\t\r\n\t\t\tif(this.disabled === true)\r\n\t\t\t{\r\n\t\t\t\tthis.element.style.cursor = \"initial\";\r\n\t\t\t\tthis.element.style.pointerEvents = \"none\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthis.element.style.cursor = \"pointer\";\r\n\t\t\t\tthis.element.style.pointerEvents = \"auto\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set checkbox value.\r\n\t\t * \r\n\t\t * @method setValue\r\n\t\t * @param {Boolean} value\r\n\t\t */\r\n\t\tsetValue : function(value)\r\n\t\t{\r\n\t\t\tthis.value = value;\r\n\t\t\tthis.check.style.visibility = this.value ? \"visible\" : \"hidden\";\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get checkbox value.\r\n\t\t * \r\n\t\t * @method getValue\r\n\t\t * @return {Boolean} Value from the element.\r\n\t\t */\r\n\t\tgetValue : function()\r\n\t\t{\r\n\t\t\treturn this.value;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set onchange callback.\r\n\t\t * \r\n\t\t * @method setOnChange\r\n\t\t * @param {Function} callback\r\n\t\t */\r\n\t\tsetOnChange : function(callback)\r\n\t\t{\r\n\t\t\tthis.onChange = callback;\r\n\t\t},\r\n\r\n\t\tupdateVisibility : function()\r\n\t\t{\r\n\t\t\tthis.element.style.visibility = this.visible ? \"visible\" : \"hidden\";\r\n\t\t},\r\n\r\n\t\tupdateSize : function()\r\n\t\t{\r\n\t\t\tthis.element.style.width = this.size.y + \"px\";\r\n\t\t\tthis.element.style.height = this.size.y + \"px\";\r\n\t\t}\r\n\r\n\t });\r\n\r\n\r\n\r\n\treturn selectize.CheckBox = CheckBox;\r\n});\ndefine('skylark-widgets-selectize/DropdownList',[\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"./selectize\"\r\n],function(Widget,selectize){\r\n\t\"use strict\";\r\n\r\n\tvar DropdownList = Widget.inherit({\r\n\t\t\"_construct\" : function (parent)\r\n\t\t{\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\t// Select\r\n\t\t\tthis.select = document.createElement(\"select\");\r\n\t\t\t//this.select.style.backgroundColor = Editor.theme.boxColor;\r\n\t\t\tthis.select.style.backgroundColor = skin.boxColor;\r\n\t\t\t//this.select.style.color = Editor.theme.textColor;\r\n\t\t\tthis.select.style.color = skin.textColor;\r\n\t\t\tthis.select.style.left = \"0px\";\r\n\t\t\tthis.select.style.top = \"0px\";\r\n\t\t\tthis.select.style.textIndent = \"5px\";\r\n\t\t\tthis.select.style.borderStyle = \"none\";\r\n\t\t\tthis.select.style.boxSizing = \"border-box\";\r\n\t\t\tthis.select.style.borderRadius = \"4px\";\r\n\t\t\tthis.select.style.outline = \"none\";\r\n\t\t\tthis.select.style.cursor = \"pointer\";\r\n\t\t\tthis.select.style.MozAppearance = \"textfield\";\r\n\t\t\tthis.select.style.webkitAppearance = \"caret\";\r\n\t\t\tthis.select.style.appearance = \"textfield\";\r\n\t\t\tthis._elm.appendChild(this.select);\r\n\r\n\t\t\t// Arrow\r\n\t\t\tthis.arrow = document.createElement(\"img\");\r\n\t\t\tthis.arrow.style.display = \"block\";\r\n\t\t\tthis.arrow.style.position = \"absolute\";\r\n\t\t\tthis.arrow.style.pointerEvents = \"none\";\r\n\t\t\tthis.arrow.style.right = \"6px\";\r\n\t\t\tthis.arrow.style.width = \"10px\";\r\n\t\t\tthis.arrow.style.height = \"10px\";\r\n\t\t\t//this.arrow.src = Global.FILE_PATH + \"icons/misc/arrow_down.png\";\r\n\t\t\tthis.arrow.src = skin.arrowDownIconUrl;\r\n\t\t\tthis._elm.appendChild(this.arrow);\r\n\r\n\t\t\t// Attributes\r\n\t\t\tthis.values = [];\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Set the disabled state of the element.\r\n\t\t *\r\n\t\t * @method setDisabled\r\n\t\t * @param {boolean} disabled\r\n\t\t */\r\n\t\tsetDisabled : function(value)\r\n\t\t{\r\n\t\t\tthis.select.disabled = value;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set onchange callback, called after changes.\r\n\t\t *\r\n\t\t * @method setOnChange\r\n\t\t * @param {Function} onChange\r\n\t\t */\r\n\t\tsetOnChange : function(onChange)\r\n\t\t{\r\n\t\t\tthis.select.onchange = onChange;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Add option to the dropdown list.\r\n\t\t *\r\n\t\t * @method addValue\r\n\t\t * @param {string} text Label of the option.\r\n\t\t * @param {Object} value Value of the option.\r\n\t\t */\r\n\t\taddValue : function(text, value)\r\n\t\t{\r\n\t\t\tvar option = document.createElement(\"option\");\r\n\t\t\toption.appendChild(document.createTextNode(text));\r\n\t\t\tthis.values.push(value);\r\n\t\t\tthis.select.appendChild(option);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove all element from dropdown\r\n\t\t *\r\n\t\t * @method clearValues\r\n\t\t */\r\n\t\tclearValues : function()\r\n\t\t{\r\n\t\t\tthis.values = [];\r\n\t\t\tfor(var i = 0; i < this.select.children.length; i++)\r\n\t\t\t{\r\n\t\t\t\tthis.select.removeChild(this.select.children[i]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get value stored in the input element.\r\n\t\t *\r\n\t\t * @method setValue\r\n\t\t * @return {Object} Value stored in the input element.\r\n\t\t */\r\n\t\tgetValue : function()\r\n\t\t{\r\n\t\t\tif(this.select.selectedIndex > -1)\r\n\t\t\t{\r\n\t\t\t\treturn this.values[this.select.selectedIndex];\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set value stored in the input element.\r\n\t\t *\r\n\t\t * @method setValue\r\n\t\t * @param {Object} value\r\n\t\t */\r\n\t\tsetValue : function(value)\r\n\t\t{\r\n\t\t\t// Get value index\r\n\t\t\tfor(var i = 0; i < this.values.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif(this.values[i] === value)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.select.selectedIndex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// If value not found set selectedIndex to -1\r\n\t\t\tif(i === this.values.length)\r\n\t\t\t{\r\n\t\t\t\tthis.select.selectedIndex = -1;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Get dropdownlist selected index\r\n\t\tgetSelectedIndex : function()\r\n\t\t{\r\n\t\t\treturn this.select.selectedIndex;\r\n\t\t},\r\n\r\n\t\t// Set dropdownlist selected index\r\n\t\tsetSelectedIndex : function(index)\r\n\t\t{\r\n\t\t\tthis.select.selectedIndex = index;\r\n\t\t},\r\n\r\n\t\tupdateVisibility : function()\r\n\t\t{\r\n\t\t\tthis._elm.style.visibility = this.visible ? \"visible\" : \"hidden\";\r\n\t\t},\r\n\r\n\t\tupdateSize : function()\r\n\t\t{\r\n\t\t\tWidget.prototype.updateSize.call(this);\r\n\r\n\t\t\tthis.select.style.width = this.size.x + \"px\";\r\n\t\t\tthis.select.style.height = this.size.y + \"px\";\r\n\r\n\t\t\tthis.arrow.style.top = ((this.size.y - 10) / 2) + \"px\";\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\treturn selectize.DropdownList = DropdownList;\r\n});\r\n\ndefine('skylark-widgets-selectize/main',[\r\n\t\"./selectize\",\r\n\t\"./CheckBox\",\r\n\t\"./DropdownList\"\r\n],function(selectize){\r\n\treturn selectize;\r\n});\ndefine('skylark-widgets-selectize', ['skylark-widgets-selectize/main'], function (main) { return main; });\n\n"]}