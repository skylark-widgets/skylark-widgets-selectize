{"version":3,"sources":["CheckBox.js"],"names":["define","Widget","selectize","CheckBox","inherit","_construct","parent","prototype","call","this","self","element","style","display","boxSizing","cursor","backgroundColor","Editor","theme","boxColor","borderRadius","onclick","setValue","value","onChange","check","document","createElement","visibility","pointerEvents","position","top","left","width","height","src","Global","FILE_PATH","appendChild","disabled","setDisabled","getValue","setOnChange","callback","updateVisibility","visible","updateSize","size","y"],"mappings":";;;;;;;AAAAA,QACC,8BACA,eACC,SAASC,EAAOC,GACjB,aASC,IAAIC,EAAWF,EAAOG,SACtBC,WAAe,SAAUC,GAExBL,EAAOM,UAAUF,WAAWG,KAAKC,KAAMH,EAAQ,OAE/C,IAAII,EAAOD,KAEXA,KAAKE,QAAQC,MAAMC,QAAU,QAC7BJ,KAAKE,QAAQC,MAAME,UAAY,aAC/BL,KAAKE,QAAQC,MAAMG,OAAS,UAC5BN,KAAKE,QAAQC,MAAMI,gBAAkBC,OAAOC,MAAMC,SAClDV,KAAKE,QAAQC,MAAMQ,aAAe,MAClCX,KAAKE,QAAQU,QAAU,WAEtBX,EAAKY,UAAUZ,EAAKa,OAEC,OAAlBb,EAAKc,UAEPd,EAAKc,SAASd,EAAKa,QAIrBd,KAAKgB,MAAQC,SAASC,cAAc,OACpClB,KAAKgB,MAAMb,MAAMgB,WAAa,SAC9BnB,KAAKgB,MAAMb,MAAMiB,cAAgB,OACjCpB,KAAKgB,MAAMb,MAAMkB,SAAW,WAC5BrB,KAAKgB,MAAMb,MAAMmB,IAAM,MACvBtB,KAAKgB,MAAMb,MAAMoB,KAAO,MACxBvB,KAAKgB,MAAMb,MAAMqB,MAAQ,MACzBxB,KAAKgB,MAAMb,MAAMsB,OAAS,MAC1BzB,KAAKgB,MAAMU,IAAMC,OAAOC,UAAY,uBACpC5B,KAAKE,QAAQ2B,YAAY7B,KAAKgB,OAQ9BhB,KAAKc,OAAQ,EAQbd,KAAKe,SAAW,KAQhBf,KAAK8B,UAAW,GAWjBC,YAAc,SAASjB,GAEtBd,KAAK8B,SAAWhB,GAEK,IAAlBd,KAAK8B,UAEP9B,KAAKE,QAAQC,MAAMG,OAAS,UAC5BN,KAAKE,QAAQC,MAAMiB,cAAgB,SAInCpB,KAAKE,QAAQC,MAAMG,OAAS,UAC5BN,KAAKE,QAAQC,MAAMiB,cAAgB,SAUrCP,SAAW,SAASC,GAEnBd,KAAKc,MAAQA,EACbd,KAAKgB,MAAMb,MAAMgB,WAAanB,KAAKc,MAAQ,UAAY,UASxDkB,SAAW,WAEV,OAAOhC,KAAKc,OASbmB,YAAc,SAASC,GAEtBlC,KAAKe,SAAWmB,GAGjBC,iBAAmB,WAElBnC,KAAKE,QAAQC,MAAMgB,WAAanB,KAAKoC,QAAU,UAAY,UAG5DC,WAAa,WAEZrC,KAAKE,QAAQC,MAAMqB,MAAQxB,KAAKsC,KAAKC,EAAI,KACzCvC,KAAKE,QAAQC,MAAMsB,OAASzB,KAAKsC,KAAKC,EAAI,QAO5C,OAAO9C,EAAUC,SAAWA","file":"../CheckBox.js","sourcesContent":["define([\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"./selectize\"\r\n],function(Widget,selectize){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Check box input element.\r\n\t * \r\n\t * @class CheckBox\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent element.\r\n\t */\r\n\t var CheckBox = Widget.inherit({\r\n\t\t\"_construct\" : function (parent)\r\n\t\t{\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tthis.element.style.display = \"block\";\r\n\t\t\tthis.element.style.boxSizing = \"border-box\";\r\n\t\t\tthis.element.style.cursor = \"pointer\";\r\n\t\t\tthis.element.style.backgroundColor = Editor.theme.boxColor;\r\n\t\t\tthis.element.style.borderRadius = \"4px\";\r\n\t\t\tthis.element.onclick = function()\r\n\t\t\t{\r\n\t\t\t\tself.setValue(!self.value);\r\n\t\t\t\t\r\n\t\t\t\tif(self.onChange !== null)\r\n\t\t\t\t{\r\n\t\t\t\t\tself.onChange(self.value);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tthis.check = document.createElement(\"img\");\r\n\t\t\tthis.check.style.visibility = \"hidden\";\r\n\t\t\tthis.check.style.pointerEvents = \"none\";\r\n\t\t\tthis.check.style.position = \"absolute\";\r\n\t\t\tthis.check.style.top = \"20%\";\r\n\t\t\tthis.check.style.left = \"20%\";\r\n\t\t\tthis.check.style.width = \"60%\";\r\n\t\t\tthis.check.style.height = \"60%\";\r\n\t\t\tthis.check.src = Global.FILE_PATH + \"icons/misc/check.png\";\r\n\t\t\tthis.element.appendChild(this.check);\r\n\r\n\t\t\t/**\r\n\t\t\t * Value stored in the checkbox.\r\n\t\t\t *\r\n\t\t\t * @property value\r\n\t\t\t * @type {Boolean}\r\n\t\t\t */\r\n\t\t\tthis.value = false;\r\n\r\n\t\t\t/**\r\n\t\t\t * On change callback function.\r\n\t\t\t *\r\n\t\t\t * @property onChange\r\n\t\t\t * @type {Function}\r\n\t\t\t */\r\n\t\t\tthis.onChange = null;\r\n\r\n\t\t\t/** \r\n\t\t\t * If the checkbox is disabled the value cannot be edited.\r\n\t\t\t *\r\n\t\t\t * @attribute disabled\r\n\t\t\t * @type {Boolean}\r\n\t\t\t */\r\n\t\t\tthis.disabled = false;\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Set if element is disabled.\r\n\t\t *\r\n\t\t * When disabled the checkbox value cannot be edited.\r\n\t\t *\r\n\t\t * @method setDisabled\r\n\t\t */\r\n\t\tsetDisabled : function(value)\r\n\t\t{\r\n\t\t\tthis.disabled = value;\r\n\t\t\t\r\n\t\t\tif(this.disabled === true)\r\n\t\t\t{\r\n\t\t\t\tthis.element.style.cursor = \"initial\";\r\n\t\t\t\tthis.element.style.pointerEvents = \"none\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthis.element.style.cursor = \"pointer\";\r\n\t\t\t\tthis.element.style.pointerEvents = \"auto\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set checkbox value.\r\n\t\t * \r\n\t\t * @method setValue\r\n\t\t * @param {Boolean} value\r\n\t\t */\r\n\t\tsetValue : function(value)\r\n\t\t{\r\n\t\t\tthis.value = value;\r\n\t\t\tthis.check.style.visibility = this.value ? \"visible\" : \"hidden\";\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get checkbox value.\r\n\t\t * \r\n\t\t * @method getValue\r\n\t\t * @return {Boolean} Value from the element.\r\n\t\t */\r\n\t\tgetValue : function()\r\n\t\t{\r\n\t\t\treturn this.value;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set onchange callback.\r\n\t\t * \r\n\t\t * @method setOnChange\r\n\t\t * @param {Function} callback\r\n\t\t */\r\n\t\tsetOnChange : function(callback)\r\n\t\t{\r\n\t\t\tthis.onChange = callback;\r\n\t\t},\r\n\r\n\t\tupdateVisibility : function()\r\n\t\t{\r\n\t\t\tthis.element.style.visibility = this.visible ? \"visible\" : \"hidden\";\r\n\t\t},\r\n\r\n\t\tupdateSize : function()\r\n\t\t{\r\n\t\t\tthis.element.style.width = this.size.y + \"px\";\r\n\t\t\tthis.element.style.height = this.size.y + \"px\";\r\n\t\t}\r\n\r\n\t });\r\n\r\n\r\n\r\n\treturn selectize.CheckBox = CheckBox;\r\n});"]}